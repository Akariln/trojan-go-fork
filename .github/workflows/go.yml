name: go
on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"
jobs:
  go:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go 1.x.y
        uses: actions/setup-go@main
        with:
          go-version: ^1.24
      - name: Checkout codebase
        uses: actions/checkout@main

      - name: go
        run: |
          go clean -modcache
          go mod tidy -compat=1.24
          gofmt -w -r 'interface{} -> any' .
          go get -u
          go mod download
          # 获取最新的 release 信息
          release_info=$(curl -s https://api.github.com/repos/XTLS/Xray-core/releases/latest)
          # 提取最新的 tag
          latest_tag=$(echo "$release_info" | grep "tag_name" | cut -d '"' -f 4)
          # 获取最新 tag 对应的 commit hash
          commit_hash=$(curl -s https://api.github.com/repos/XTLS/Xray-core/commits/$latest_tag | grep "sha" | head -n 1 | cut -d '"' -f 4)
          # 使用提取的 commit hash 通过 go get 获取 xray-core
          go get github.com/xtls/xray-core@$commit_hash
          
          # 获取 tfo-go 最新的 commits
          tfo_commit_hash=$(curl -s https://api.github.com/repos/database64128/tfo-go/commits | grep "sha" | head -n 1 | cut -d '"' -f 4)
          # 使用提取的 commit hash 通过 go get 获取 tfo-go
          go get github.com/database64128/tfo-go@$tfo_commit_hash

      - name: Git push 
        run: |
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote rm origin
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUBTOKEN }}@github.com/${{ github.repository }}"
          git gc --aggressive
          git add --all
          git commit -m "update go $(date +%Y.%m.%d.%H.%M)"
          git push -f -u origin master
          
    # 删除无用 workflow runs;
      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 0.1
          keep_minimum_runs: 1
